<?php
namespace mychaelstyle\storage\providers;
require_once 'storage/providers/Mysql.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-07-17 at 08:35:18.
 */
class MysqlTest extends \mychaelstyle\TestBase
{
  /**
   * @var Mysql
   */
  protected $object;
  /**
   * @var string
   */
  protected $uri;
  /**
   * @var array options
   */
  protected $options = array();

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  public function setUp()
  {
    parent::setUp();
    $this->object = new Mysql;
    $this->uri = 'localhost/test/m_files';
    $this->options = array(
      'user' => 'root',
      'pass' => '',
      'table' => 'm_files',
    );
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  public function tearDown()
  {
    parent::tearDown();
  }

  /**
   * @covers mychaelstyle\storage\providers\Mysql::__construct
   * @covers mychaelstyle\storage\providers\Mysql::connect
   * @covers mychaelstyle\storage\providers\Mysql::parseUriParams
   * @covers mychaelstyle\storage\providers\Mysql::disconnect
   */
  public function testConnect()
  {
    // simple
    $this->object->connect($this->uri,$this->options);
    $this->object->disconnect();
    // with port
    $uri = 'localhost:3306/test';
    $this->object->connect($uri,$this->options);
    $this->object->disconnect();
    // with params
    $uri = 'localhost:3306/test/m_files?uri=uri&contents=contents';
    $this->object->connect($uri,$this->options);
    $this->object->disconnect();
    // with pdo
		$pdodsn = 'mysql:dbname=test;host=localhost;port=3306';
    $pdo = new \PDO( $pdodsn, 'root', '', array(\PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES utf8') );
    $pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION );
    $pdo->setAttribute(\PDO::ATTR_TIMEOUT, (defined('MYSQL_TIMEOUT') ? MYSQL_TIMEOUT : 5));
    $this->options['pdo'] = $pdo;
    $this->object->connect($uri,$this->options);
    $this->object->disconnect();
    // with pdo array
    $this->options['pdo'] = array($pdo,$pdo);
    $this->object->connect($uri,$this->options);
    $this->object->disconnect();


  }

  /**
   * @covers mychaelstyle\storage\providers\Mysql::put
   * @covers mychaelstyle\storage\providers\Mysql::remove
   */
  public function testPut()
  {
    $this->object->connect($this->uri,$this->options);
    $this->object->put($this->org_example,'/tmp.txt',array());
  }

  /**
   * @covers mychaelstyle\storage\providers\Mysql::get
   * @depends testPut
   */
  public function testGet()
  {
    $this->object->connect($this->uri,$this->options);
    // get contents
    $contents = $this->object->get('/tmp.txt');
    $this->assertEquals(file_get_contents($this->org_example),$contents);
    // to file
    $tmp = tempnam(sys_get_temp_dir(),'tmp_mychaelstyle_storage_mysql_test_');
    $result = $this->object->get('/tmp.txt',$tmp);
    $this->assertTrue($result);
    $this->assertEquals(file_get_contents($this->org_example),file_get_contents($tmp));

    // disconnect
    $this->object->disconnect();
  }

}
