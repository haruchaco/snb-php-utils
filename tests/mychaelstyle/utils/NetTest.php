<?php
namespace mychaelstyle\utils;
require_once 'utils/Net.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-07-26 at 23:52:45.
 */
class NetTest extends \mychaelstyle\TestBase
{

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp()
  {
    parent::setUp();
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown()
  {
    parent::tearDown();
  }

  /**
   * @covers mychaelstyle\utils\Net::getUserAgent
   * @covers mychaelstyle\utils\Net::clear
   */
  public function testGetUserAgent()
  {
    // null
    $result = Net::getUserAgent();
    $this->assertEmpty($result);
    Net::clear();

    $expected = 'Test User Agent 1.0';
    $_SERVER['HTTP_USER_AGENT'] = $expected;
    $result = Net::getUserAgent();
    $this->assertEquals($expected,$result);
    Net::clear();

  }

  /**
   * @covers mychaelstyle\utils\Net::getRemoteAddress
   * @covers mychaelstyle\utils\Net::clear
   */
  public function testGetRemoteAddress()
  {
    $result = Net::getRemoteAddress();
    $this->assertEmpty($result);
    Net::clear();
    // REMOTE_HOSTのみ
    $expected = '127.0.0.1';
    $_SERVER['REMOTE_ADDR'] = '127.0.0.1';
    $result = Net::getRemoteAddress();
    $this->assertEquals($expected,$result);
    Net::clear();
    // X-forwarded-for優先
    $expected = '127.0.0.2';
    $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected;
    $_SERVER['REMOTE_ADDR'] = '127.0.0.1';
    $result = Net::getRemoteAddress();
    $this->assertEquals($expected,$result);
    Net::clear();
    // X-forwarded-for ,
    $expected = '127.0.0.2';
    $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected.', 10.0.0.8';
    $result = Net::getRemoteAddress();
    $this->assertEquals($expected,$result);
    Net::clear();
    // X-forwarded-for :
    $expected = '127.0.0.2';
    $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected.': 10.0.0.8';
    $result = Net::getRemoteAddress();
    $this->assertEquals($expected,$result);
    Net::clear();
    // X-forwarded-for ;
    $expected = '127.0.0.2';
    $_SERVER['HTTP_X_FORWARDED_FOR'] = $expected.'; 10.0.0.8';
    $result = Net::getRemoteAddress();
    $this->assertEquals($expected,$result);
    Net::clear();
  }

  /**
   * @covers mychaelstyle\utils\Net::getRemoteHost
   */
  public function testGetRemoteHost()
  {
    $result = Net::getRemoteHost();
    $this->assertEmpty($result);
    Net::clear();
    // REMOTE_HOSTのみ
    $expected = 'localhost';
    $_SERVER['REMOTE_ADDR'] = '127.0.0.1';
    $result = Net::getRemoteHost();
    $this->assertEquals($expected,$result);
    Net::clear();

    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
      'This test has not been implemented yet.'
    );
  }

  /**
   * @covers mychaelstyle\utils\Net::getLanguage
   * @todo   Implement testGetLanguage().
   */
  public function testGetLanguage()
  {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
      'This test has not been implemented yet.'
    );
  }

  /**
   * @covers mychaelstyle\utils\Net::isSSL
   * @todo   Implement testIsSSL().
   */
  public function testIsSSL()
  {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
      'This test has not been implemented yet.'
    );
  }
}
